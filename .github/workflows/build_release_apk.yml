name: Build release APK

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Release-Build"
        default: "Generate release build"
      release_tag_name:
        description: "Tag name for the release"
        default: "v1.0"
        required: true
      release_name:
        description: "Name of the release"
        default: "Release v1.0"
        required: true
      release_body:
        description: "Release notes"
        required: true
        default: "Release notes for v1.0"
      upload_play_store:
        description: "Upload to Play Store"
        required: true
        default: "false"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2.0.10

    - name: Create file google-services.json
      run: cat /home/runner/work/motoconnect-mobile/motoconnect-mobile/app/google-services.json | base64

    - name: Putting data google-services.json
      env:
        DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
      run: echo $DATA > /home/runner/work/motoconnect-mobile/motoconnect-mobile/app/google-services.json

    - name: Create file local.properties
      run: cat /home/runner/work/motoconnect-mobile/motoconnect-mobile/app/local.properties | base64

    - name: Putting data local.properties
      env:
        MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      run: |
        echo "MAPS_API_KEY=$MAPS_API_KEY" > ./local.properties
        echo "WEATHER_API_KEY=$WEATHER_API_KEY" >> ./local.properties

    - name: Decode Keystore
      env:
        ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
        RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
        RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

      run: |
        echo $ENCODED_STRING > keystore-b64.txt
        echo "Encoded string: $ENCODED_STRING"
        cat keystore-b64.txt
        base64 -d keystore-b64.txt > keystore.jks

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Release apk
      env:
        RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
        RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
      run: ./gradlew assembleRelease --stacktrace

    - name: Build Release bundle
      env:
        RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
        RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
      run: ./gradlew bundleRelease --stacktrace

    - name: Get release file apk path
      id: releaseApk
      run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

    - name: Upload Release Build to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-artifacts
        path: ${{ steps.releaseApk.outputs.apkfile }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ steps.releaseApk.outputs.apkfile }}
        tag_name: ${{ github.event.inputs.release_tag_name }}
        release_name: ${{ github.event.inputs.release_name }}
        body: ${{ github.event.inputs.release_body }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

#    - name: Upload to Play Store
#      if: ${{ github.event.inputs.upload_play_store == 'true' }}
#      uses: r0adkll/upload-google-play@v1
#      with:
#        serviceAccountJsonPlainText: ${{ SERVICE_ACCOUNT_JSON }}
#        packageName: fr.motoconnect
#        releaseFiles: app/build/outputs/bundle/release/app-release.aab
#        track: production